// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: app/chat.proto

package appv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Chat event types
type ChatEventType int32

const (
	ChatEventType_MESSAGE     ChatEventType = 0
	ChatEventType_USER_JOINED ChatEventType = 1
	ChatEventType_USER_LEFT   ChatEventType = 2
)

// Enum value maps for ChatEventType.
var (
	ChatEventType_name = map[int32]string{
		0: "MESSAGE",
		1: "USER_JOINED",
		2: "USER_LEFT",
	}
	ChatEventType_value = map[string]int32{
		"MESSAGE":     0,
		"USER_JOINED": 1,
		"USER_LEFT":   2,
	}
)

func (x ChatEventType) Enum() *ChatEventType {
	p := new(ChatEventType)
	*p = x
	return p
}

func (x ChatEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_chat_proto_enumTypes[0].Descriptor()
}

func (ChatEventType) Type() protoreflect.EnumType {
	return &file_app_chat_proto_enumTypes[0]
}

func (x ChatEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatEventType.Descriptor instead.
func (ChatEventType) EnumDescriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{0}
}

// Chat message model
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_app_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_app_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// User joins chat room
type JoinChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinChatRequest) Reset() {
	*x = JoinChatRequest{}
	mi := &file_app_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChatRequest) ProtoMessage() {}

func (x *JoinChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChatRequest.ProtoReflect.Descriptor instead.
func (*JoinChatRequest) Descriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{1}
}

func (x *JoinChatRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinChatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JoinChatRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Response when user joins
type JoinChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinChatResponse) Reset() {
	*x = JoinChatResponse{}
	mi := &file_app_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChatResponse) ProtoMessage() {}

func (x *JoinChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChatResponse.ProtoReflect.Descriptor instead.
func (*JoinChatResponse) Descriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{2}
}

func (x *JoinChatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinChatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Send message request
type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_app_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SendMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendMessageRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Send message response
type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_app_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// Stream chat messages request
type StreamChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamChatRequest) Reset() {
	*x = StreamChatRequest{}
	mi := &file_app_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamChatRequest) ProtoMessage() {}

func (x *StreamChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamChatRequest.ProtoReflect.Descriptor instead.
func (*StreamChatRequest) Descriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{5}
}

func (x *StreamChatRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *StreamChatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Chat event for streaming
type ChatEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ChatEventType          `protobuf:"varint,1,opt,name=type,proto3,enum=app.v1.ChatEventType" json:"type,omitempty"`
	Message       *ChatMessage           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatEvent) Reset() {
	*x = ChatEvent{}
	mi := &file_app_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent) ProtoMessage() {}

func (x *ChatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_app_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent.ProtoReflect.Descriptor instead.
func (*ChatEvent) Descriptor() ([]byte, []int) {
	return file_app_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ChatEvent) GetType() ChatEventType {
	if x != nil {
		return x.Type
	}
	return ChatEventType_MESSAGE
}

func (x *ChatEvent) GetMessage() *ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChatEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatEvent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChatEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_app_chat_proto protoreflect.FileDescriptor

const file_app_chat_proto_rawDesc = "" +
	"\n" +
	"\x0eapp/chat.proto\x12\x06app.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa7\x01\n" +
	"\vChatMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"_\n" +
	"\x0fJoinChatRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\"F\n" +
	"\x10JoinChatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"|\n" +
	"\x12SendMessageRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\"N\n" +
	"\x13SendMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\"E\n" +
	"\x11StreamChatRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xd4\x01\n" +
	"\tChatEvent\x12)\n" +
	"\x04type\x18\x01 \x01(\x0e2\x15.app.v1.ChatEventTypeR\x04type\x12-\n" +
	"\amessage\x18\x02 \x01(\v2\x13.app.v1.ChatMessageR\amessage\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*<\n" +
	"\rChatEventType\x12\v\n" +
	"\aMESSAGE\x10\x00\x12\x0f\n" +
	"\vUSER_JOINED\x10\x01\x12\r\n" +
	"\tUSER_LEFT\x10\x02B}\n" +
	"\n" +
	"com.app.v1B\tChatProtoP\x01Z+github.com/hiroky1983/talk/go/gen/app;appv1\xa2\x02\x03AXX\xaa\x02\x06App.V1\xca\x02\x06App\\V1\xe2\x02\x12App\\V1\\GPBMetadata\xea\x02\aApp::V1b\x06proto3"

var (
	file_app_chat_proto_rawDescOnce sync.Once
	file_app_chat_proto_rawDescData []byte
)

func file_app_chat_proto_rawDescGZIP() []byte {
	file_app_chat_proto_rawDescOnce.Do(func() {
		file_app_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_chat_proto_rawDesc), len(file_app_chat_proto_rawDesc)))
	})
	return file_app_chat_proto_rawDescData
}

var file_app_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_app_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_app_chat_proto_goTypes = []any{
	(ChatEventType)(0),            // 0: app.v1.ChatEventType
	(*ChatMessage)(nil),           // 1: app.v1.ChatMessage
	(*JoinChatRequest)(nil),       // 2: app.v1.JoinChatRequest
	(*JoinChatResponse)(nil),      // 3: app.v1.JoinChatResponse
	(*SendMessageRequest)(nil),    // 4: app.v1.SendMessageRequest
	(*SendMessageResponse)(nil),   // 5: app.v1.SendMessageResponse
	(*StreamChatRequest)(nil),     // 6: app.v1.StreamChatRequest
	(*ChatEvent)(nil),             // 7: app.v1.ChatEvent
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_app_chat_proto_depIdxs = []int32{
	8, // 0: app.v1.ChatMessage.created_at:type_name -> google.protobuf.Timestamp
	0, // 1: app.v1.ChatEvent.type:type_name -> app.v1.ChatEventType
	1, // 2: app.v1.ChatEvent.message:type_name -> app.v1.ChatMessage
	8, // 3: app.v1.ChatEvent.timestamp:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_app_chat_proto_init() }
func file_app_chat_proto_init() {
	if File_app_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_chat_proto_rawDesc), len(file_app_chat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_chat_proto_goTypes,
		DependencyIndexes: file_app_chat_proto_depIdxs,
		EnumInfos:         file_app_chat_proto_enumTypes,
		MessageInfos:      file_app_chat_proto_msgTypes,
	}.Build()
	File_app_chat_proto = out.File
	file_app_chat_proto_goTypes = nil
	file_app_chat_proto_depIdxs = nil
}
